# Copyright the Hyperledger Fabric contributors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: 002-k8s-crds-operator

on:
  create:
    tags:
      - "*"      
  workflow_dispatch:

env:
  GITHUB_SHA: ${{ github.sha }}
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: eu-gb
  REGISTRY_HOSTNAME: uk.icr.io
  CLUSTER_ID: ${{ secrets.CLUSTER_ID }}  
  PROJECT_NAME: samara-alpha
  
jobs:
  crds-operator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f kubernetes-service
          ibmcloud plugin install -f container-registry    
          ibmcloud plugin install -f secrets-manager  

      - name: Authenticate with IBM Cloud CLI
        run: |
          ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g Blockchain-Test
          ibmcloud cr region-set "${IBM_CLOUD_REGION}"
          ibmcloud cr login

          mkdir -p _cfg
          ibmcloud ks cluster config --cluster ${CLUSTER_ID} 
          ibmcloud ks cluster config --cluster ${CLUSTER_ID}  --output yaml > _cfg/k8s_context.yaml

      # This might well be more sophisticated
      - name: Create the Configuration for the Fabric Network
        run: |
          find architecture -name "*.yml" -exec cp {} _cfg \;
          mv _cfg/operator-console-iks-vpc-vars.yml _cfg/operator-console-vars.yml
   

      - name: Create the Fabric CRDs/Operator
        id: operatorinstall
        uses: ./fabric-ansible-action
        with:
          playbook: playbooks/operator_console_playbooks/01-operator-install.yml

      - name: Create the Fabric Operations Console
        id: consoleinstall
        uses: ./fabric-ansible-action
        with:
          playbook: playbooks/operator_console_playbooks/02-console-install.yml

      # Upload the created API Secret Information to secure location
      - name: Upload the Console API Key
        run: |
          #!/bin/bash
          set -ex
          export SECRETS_MANAGER_URL=https://${INSTANCE_ID}.eu-gb.secrets-manager.appdomain.cloud

          # get the yaml file load with the config needed, base64 encode without wrapping
          export AUTH_DATA=$(cat _cfg/auth-vars.yml | base64 --wrap=0)

          # Create the template JSON - note the AUTH_DATA is expanded without the need for envsubst
          export RESOURCE=$(cat << EOF
          [{"name": "consolelogin", "secret_group_id": "baab90f3-f253-43a2-4515-86dea899e3c9", "payload": "${AUTH_DATA}"}]
          EOF
          )

          ibmcloud secrets-manager secret-create   \
              --secret-type=arbitrary \
              --resources="${RESOURCE}" \
              --output=json 

          export SECRET_ID=$(ibmcloud secrets-manager secrets --secret-type=arbitrary --output json | jq -r '.resources[] | select(.name=="consolelogin").id')
          ibmcloud secrets-manager secret --secret-type "arbitrary" --id ${SECRET_ID} --output json |  jq -r '.resources[0].secret_data.payload' | base64 --decode    

        env:
          INSTANCE_ID: ${{ secrets.SECRET_MGR_INSTANCE_ID }}
